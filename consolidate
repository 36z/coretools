#!/usr/bin/env node

var program = require('commander');
var bignum = require('bignum');
var BitcoinRPC = require('bitcore/RpcClient').class();
var coinUtil = require('bitcore/util/util');

var PROGRAM_VERSION = '0.1';

program
	.version(PROGRAM_VERSION)
	.option('--maxbtc [value]', 'Ignore coins greater than this value', Number, 10.0)
	.option('--rpcport [port]', 'Bitcoind RPC port [18332]', Number, 18332)
	.option('--rpcuser [user]', 'Bitcoind RPC user [user]', String, 'user')
	.option('--rpcpass [password]', 'Bitcoind RPC password [pass]', String, 'pass')
	.parse(process.argv);

var rpc = new BitcoinRPC({
		'port' : program.rpcport,
		'user' : program.rpcuser,
		'pass' : program.rpcpass,
		'protocol' : 'http'
});

function get_unspent()
{
	console.log("Download list of unspent coins...");
	rpc.listUnspent(unspent_cb);
}

function unspent_cb(err, resp)
{
	if (err) throw new Error(err['message']);
	var unspent_coins = resp['result'];

	filter_unspent(unspent_coins);
}

function coins_by_value(a, b)
{
	var bnA = bignum(a.amount);
	var bnB = bignum(b.amount);
	return bnA.cmp(bnB);
}

function filter_unspent(unspent_coins)
{
	var decimal = program.maxbtc.toString();
	var maxBn = coinUtil.parseValue(decimal);

	var tmp = [];
	for (var i = 0; i < unspent_coins.length; i++) {
		var obj = unspent_coins[i];
		decimal = obj.amount.toString();
		var bn = coinUtil.parseValue(decimal);

		// filter out everything above --maxbtc
		if (bn.gt(maxBn))
			continue;

		// convert amount to a string of satoshis
		obj.amount = bn.toString();

		tmp.push(obj);
	}

	unspent_coins = tmp;

	// sort by value
	unspent_coins.sort(coins_by_value);

	console.dir(unspent_coins);
}

function main()
{
	get_unspent();
}

main();

